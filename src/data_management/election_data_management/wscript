#! python


def build(ctx):

    # Tests
    ctx(
        rule='pytest ../src/data_management/election_data_management --no-cov',
        name='test_elec_data_management',
    )

    ctx(
        features='run_py_script',
        source='get_elec_mun.py',
        target=ctx.path_to(ctx, 'OUT_DATA_ELEC', 'election_mun.csv'),
        name='get_elec_mun'
    )

    ctx(
        features='run_py_script',
        source='scrape_elec_data.py',
        deps=ctx.path_to(ctx, 'OUT_DATA_ELEC', 'election_mun.csv'),
        target=ctx.path_to(ctx, 'OUT_DATA_ELEC', 'election_data.csv'),
        name='scrape_elec_data'
    )

    ctx(
        features='run_py_script',
        source='build_elec_id.py',
        deps=[
            ctx.path_to(ctx, 'OUT_DATA_ELEC', 'election_mun.csv'),
            ctx.path_to(ctx, 'OUT_DATA_ELEC', 'election_data.csv')
        ],
        target=ctx.path_to(ctx, 'OUT_DATA_ELEC', 'election_id_data.csv'),
        name='build_elec_id'
    )

    ctx(
        features='run_py_script',
        source='dwnld_elec_csv.py',
        deps=ctx.path_to(ctx, 'OUT_DATA_ELEC', 'election_id_data.csv'),
        target=[
            ctx.path_to(ctx, 'OUT_DATA_ELEC_CSV', 'election_dwnld_finished.txt'),
            ctx.path_to(ctx, 'OUT_DATA_ELEC', 'elections_combined.csv')
        ],
        name='dwnld_elec_csv'
    )

    ctx(
        features='run_py_script',
        source='get_elec_off_longlat.py',
        deps=ctx.path_to(ctx, 'OUT_DATA_ELEC', 'elections_combined.csv'),
        target=[
            ctx.path_to(ctx, 'OUT_DATA_ELEC', 'elec_off_longlat.csv'),
            ctx.path_to(ctx, 'OUT_DATA_ELEC', 'elections_final.csv'),
            ctx.path_to(ctx, 'OUT_DATA_ELEC', 'elections_final_wo_postal.csv')
        ],            
        name='get_elec_off_longlat'
    )
