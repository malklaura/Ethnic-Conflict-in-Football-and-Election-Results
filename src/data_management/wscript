#! python


def build(ctx):

    # Illustrate simple use of run_py_script
    ctx(
        features='run_py_script',
        source='get_simulation_draws.py',
        target=ctx.path_to(ctx, 'OUT_DATA', 'initial_locations.csv'),
        name='get_simulation_draws'
    )

    ctx(
        features='run_py_script',
        source='get_scrapable_mun.py',
        target=ctx.path_to(ctx, 'OUT_DATA_ELEC', 'election_mun.csv'),
        name='get_scrapable_mun'
    )

    ctx(
        features='run_py_script',
        source='get_votes_df.py',
        deps=[
            ctx.path_to(ctx, 'OUT_DATA_ELEC', 'election_mun.csv')
        ],
        target=ctx.path_to(ctx, 'OUT_DATA_ELEC', 'election_urls.csv'),
        name='get_votes_df'
    )

    ctx(
        features='run_py_script',
        source='download_voting_files.py',
        deps=[
            ctx.path_to(ctx, 'OUT_DATA_ELEC', 'election_master.csv')
        ],
        target=[
            ctx.path_to(ctx, 'OUT_DATA_ELEC_CSV', 'Aachen_BW_24.09.2017.csv'),
            ctx.path_to(ctx, 'OUT_DATA_ELEC', 'election_combined.csv')
        ],
        name='download_voting_files'
    )

    # ctx(
    #     features='run_py_script',
    #     source='get_scrapable_leagues.py',
    #     target=ctx.path_to(ctx, 'OUT_DATA', 'matchday_df.csv'),
    #     name='get_scrapable_leagues'
    # )

    # ctx(
    #     features='run_py_script',
    #     source='scrape_games.py',
    #     deps=[
    #         ctx.path_to(ctx, 'OUT_DATA', 'matchday_df.csv')
    #     ],
    #     # How to implement csv from loop in here?
    #     target=ctx.path_to(ctx, 'OUT_DATA', 'matchday_checker.csv'),
    #     name='scrape_games'
    # )

    #import pandas as pd
    #from bld.project_paths import project_paths_join as ppj
    #votes_df = pd.read_csv(
    #   ppj("OUT_DATA", "votes_df.csv"), encoding='cp1252')

    #target_list = []
    #for file_name in votes_df["ID"].tolist():
    #    new_target = "ctx.path_to(ctx, 'OUT_DATA', {}.csv)".format(file_name)
    #    target_list.append(new_target)

    #target_list = ",".join(target_list)
