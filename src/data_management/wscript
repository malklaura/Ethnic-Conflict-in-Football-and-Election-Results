#! python


def build(ctx):

    # Illustrate simple use of run_py_script
    ctx(
        features='run_py_script',
        source='get_simulation_draws.py',
        target=ctx.path_to(ctx, 'OUT_DATA', 'initial_locations.csv'),
        name='get_simulation_draws'
    )

    ctx(
        features='run_py_script',
        source='get_scrapable_mun.py',
        target=ctx.path_to(ctx, 'OUT_DATA', 'mun_df.csv'),
        name='get_scrapable_mun'
    )

    ctx(
        features='run_py_script',
        source='get_votes_df.py',
        deps=[
            ctx.path_to(ctx, 'OUT_DATA', 'mun_df.csv')
        ],
        target=ctx.path_to(ctx, 'OUT_DATA', 'votes_df.csv'),
        name='get_votes_df'
    )

    ctx(
        features='run_py_script',
        source='download_voting_files.py',
        deps=[
            ctx.path_to(ctx, 'OUT_DATA', 'votes_df.csv')
        ],
        target=ctx.path_to(ctx, 'OUT_DATA', ''),
        name='get_votes_df'
    )

    ctx(
        features='run_py_script',
        source='get_scrapable_leagues.py',
        target=ctx.path_to(ctx, 'OUT_DATA', 'matchday_df.csv'),
        name='get_scrapable_leagues'
    )

    ctx(
        features='run_py_script',
        source='scrape_games.py',
        deps=[
            ctx.path_to(ctx, 'OUT_DATA', 'matchday_df.csv')
        ],
        # How to implement csv from loop in here?
        target=ctx.path_to(ctx, 'OUT_DATA', 'matchday_checker.csv'),
        name='scrape_games'
    )
